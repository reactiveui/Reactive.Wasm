<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Extensions.Logging.MSBuild</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Extensions.Logging.MSBuild.MSBuildLogger">
             <summary>
             Implements an ILogger that passes the logs to the wrapped TaskLoggingHelper.
             </summary>
             <remarks>
             This logger is designed to be used with MSBuild tasks, allowing logs to be written in a way that integrates with the MSBuild logging system.
             It looks for specific property names in the state/scope parts of the message and maps them to the parameters of the MSBuild LogX methods.
             Those specific keys are:
             <list type="bullet">
             <item><term>Subcategory</term></item>
             <item><term>Code</term></item>
             <item><term>HelpKeyword</term></item>
             <item><term>File</term></item>
             <item><term>LineNumber</term></item>
             <item><term>ColumnNumber</term></item>
             <item><term>EndLineNumber</term></item>
             <item><term>EndColumnNumber</term></item>
             <item><term>{OriginalFormat}</term><description>(usually provided by the underlying logging framework)</description></item>
             </list>
            
             So if you add these to the scope (e.g. via <code lang="csharp">_logger.BeginScope(new Dictionary&lt;string, object&gt;{ ... }))</code> or on the message format itself,
             they will be extracted and used to format the message correctly for MSBuild.
             </remarks>
        </member>
        <member name="T:Microsoft.Extensions.Logging.MSBuild.MSBuildLogger.MSBuildMessageParameters">
            <summary>
            A struct that maps to the parameters of the MSBuild LogX methods. We'll extract this from M.E.ILogger state/scope information so that we can be maximally compatible with the MSBuild logging system.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Logging.MSBuild.MSBuildLogger.MSBuildMessageParameters.#ctor(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            A struct that maps to the parameters of the MSBuild LogX methods. We'll extract this from M.E.ILogger state/scope information so that we can be maximally compatible with the MSBuild logging system.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.MSBuild.MSBuildLogger.DummyDisposable">
            <summary>
            A simple disposable to describe scopes with <see cref="M:Microsoft.Extensions.Logging.ILogger.BeginScope``1(``0)"/>.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.Logging.MSBuild.MSBuildLoggerProvider">
            <summary>
            An <see cref="T:Microsoft.Extensions.Logging.ILoggerProvider"/> that creates <see cref="T:Microsoft.Extensions.Logging.ILogger"/>s which passes
            all the logs to MSBuild's <see cref="T:Microsoft.Build.Utilities.TaskLoggingHelper"/>.
            </summary>
        </member>
    </members>
</doc>
